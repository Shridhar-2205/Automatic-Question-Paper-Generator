/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paper;

import java.awt.Color;
import java.sql.*;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.*;
import java.io.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;
/**
 *
 * @author Dell
 */
public class MarksChoice extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame1
     */
    public MarksChoice()throws IOException {
        initComponents();
        getContentPane().setBackground(Color.CYAN);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        c1 = new javax.swing.JComboBox();
        c2 = new javax.swing.JComboBox();
        c3 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        tot = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        c0 = new javax.swing.JComboBox();
        c5 = new javax.swing.JComboBox();
        c6 = new javax.swing.JComboBox();
        c7 = new javax.swing.JComboBox();
        c4 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        ex = new javax.swing.JComboBox();
        filan = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        jLabel3.setText("3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        c1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", " " }));

        c2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", " " }));

        c3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", " " }));

        jLabel1.setText("2");

        jLabel2.setText("3");

        jLabel4.setText("4");

        jButton1.setText("Show Total");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Create");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        c0.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", " " }));

        c5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", " " }));

        c6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", " " }));

        c7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", " " }));

        c4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", " " }));

        jLabel5.setText("1");

        jLabel6.setText("5");

        jLabel7.setText("6");

        jLabel8.setText("7");

        jLabel9.setText("8");

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        ex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CS", "OOP", "DS", "CS2", "OOP2", "DS2", "CS3", "OOP3", "DS3" }));

        filan.setText(".txt");

        jLabel10.setText("File Name");

        jButton3.setText("Open Folder");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("CLASS TEST (30 MARKS)");

        jLabel12.setText("MARKS");

        jLabel13.setText("QTY");

        jLabel14.setText("MARKS");

        jLabel15.setText("QTY");

        jLabel16.setText("Subject");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(c0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(c5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(tot, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 342, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel16))
                                .addGap(10, 10, 10)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ex, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(filan)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel15)))))
                .addGap(26, 26, 26)
                .addComponent(jButton4))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(c0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)))
                    .addComponent(jLabel11))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(ex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(52, 52, 52))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 199, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
String s0= (String)c0.getSelectedItem();
        String s1= (String)c1.getSelectedItem();
 String s2= (String)c2.getSelectedItem();
 String s3= (String)c3.getSelectedItem();
 String s4= (String)c4.getSelectedItem();
 String s5= (String)c5.getSelectedItem();
 String s6= (String)c6.getSelectedItem();
    String s7= (String)c7.getSelectedItem();
   int i0,i1,i2,i3,i4,i5,i6,i7;
   
   i0=Integer.parseInt(s0);
   
   i1=2*Integer.parseInt(s1); 
   i2=3*Integer.parseInt(s2);
   i3=4*Integer.parseInt(s3);
   i4=5*Integer.parseInt(s4);
   i5=6*Integer.parseInt(s5);
   i6=7*Integer.parseInt(s6);
   i7=8*Integer.parseInt(s7);
      int total=i0+i1+i2+i3+i4+i5+i6+i7;  
      tot.setText(Integer.toString(total));

// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String s0= (String)c0.getSelectedItem();
        String s1= (String)c1.getSelectedItem();
 String s2= (String)c2.getSelectedItem();
 String s3= (String)c3.getSelectedItem();
 String s4= (String)c4.getSelectedItem();
 String s5= (String)c5.getSelectedItem();
 String s6= (String)c6.getSelectedItem();
    String s7= (String)c7.getSelectedItem();
   int i0,i1,i2,i3,i4,i5,i6,i7;
   int a0,a1,a2,a3,a4,a5,a6,a7;
   
   i0=Integer.parseInt(s0);
   a0=i0;
   i1=2*Integer.parseInt(s1); 
   i2=3*Integer.parseInt(s2);
   i3=4*Integer.parseInt(s3);
   i4=5*Integer.parseInt(s4);
   i5=6*Integer.parseInt(s5);
   i6=7*Integer.parseInt(s6);
   i7=8*Integer.parseInt(s7);
   a1=Integer.parseInt(s1);
a2=Integer.parseInt(s2);
a3=Integer.parseInt(s3);
a4=Integer.parseInt(s4);
a5=Integer.parseInt(s5);
a6=Integer.parseInt(s6);
a7=Integer.parseInt(s7);
      int total=i0+i1+i2+i3+i4+i5+i6+i7;  
      tot.setText(Integer.toString(total));
ArrayList<Integer> list = new ArrayList<Integer>();
if(total==30 && ex.getSelectedItem().equals("OOP"))
{     Statement stmt=null;
int marks[]=new int[20000];
int i=0,j=1,l=1,m=1,n=1,k;
String que[]=new String[20000];
try{
        String url="jdbc:derby://localhost:1527/question paper";
        String username="qa";
        String password="qa";
                Connection con= DriverManager.getConnection(url,username,password);
         stmt=con.createStatement();
        String sql = "SELECT * FROM OOP ORDER BY MARK ";
        ResultSet rs = stmt.executeQuery(sql);
File fout = new File(filan.getText());
	FileOutputStream fos = new FileOutputStream(fout);
 
    try (BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(fos))) {
           bw.write("                      OOP PAPER:    (30 Marks)");
           bw.newLine();
        while(rs.next()){
            //Retrieve by column name
            marks[i] = rs.getInt("MARK");
            
            que[i] = rs.getString("QUESTIONS");
            
            /*bw.write(j+". "+que[i]+" "+marks[i]);
            bw.newLine();
            bw.newLine();*/
            i++;
            j++;
            
            
        }

        for (int p=0; p<6; p++) {
            list.add(new Integer(p));
        }
        Collections.shuffle(list);
        for (int p=0; p<a0; p++) {
            bw.write((p+1)+". "+que[list.get(p)]+" ("+marks[list.get(p)]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
       for (int p=0; p<a1; p++) {
            bw.write((a0+p+1)+". "+que[list.get(p)+6]+" ("+marks[list.get(p)+6]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
       for (int p=0; p<a2; p++) {
            bw.write((a0+a1+p+1)+". "+que[list.get(p)+12]+" ("+marks[list.get(p)+12]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
       for (int p=0; p<a3; p++) {
            bw.write((a0+a1+a2+p+1)+". "+que[list.get(p)+18]+" ("+marks[list.get(p)+18]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
       for (int p=0; p<a4; p++) {
            bw.write((a0+a1+a2+a3+p+1)+". "+que[list.get(p)+24]+" ("+marks[list.get(p)+24]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
       for (int p=0; p<a5; p++) {
            bw.write((a0+a1+a2+a3+a4+p+1)+". "+que[list.get(p)+30]+" ("+marks[list.get(p)+30]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
        for (int p=0; p<a6; p++) {
            bw.write((a0+a1+a2+a3+a4+a5+p+1)+". "+que[list.get(p)+36]+" ("+marks[list.get(p)+36]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
        for (int p=0; p<a7; p++) {
            bw.write((a0+a1+a2+a3+a4+a5+a6+p+1)+". "+que[list.get(p)+42]+" ("+marks[list.get(p)+42]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
    }


        }
       catch(SQLException ex)
       {
           JOptionPane.showMessageDialog(null,ex.toString());
       }    catch (FileNotFoundException ex) {
                Logger.getLogger(MarksChoice.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MarksChoice.class.getName()).log(Level.SEVERE, null, ex);
            }
    JOptionPane.showMessageDialog(null,"OOP Paper created");
}
else if(total==30 && ex.getSelectedItem().equals("DS"))
{
     ArrayList<Integer> list1 = new ArrayList<Integer>();
         ArrayList<Integer> list2 = new ArrayList<Integer>();
         ArrayList<Integer> list3 = new ArrayList<Integer>();
         ArrayList<Integer> list4 = new ArrayList<Integer>();
         ArrayList<Integer> list5 = new ArrayList<Integer>();
         ArrayList<Integer> list6 = new ArrayList<Integer>();
         ArrayList<Integer> list7 = new ArrayList<Integer>();
         ArrayList<Integer> list8 = new ArrayList<Integer>();
    Statement stmt=null;
int marks[]=new int[20000];
int i=0,j=1,l=1,m=1,n=1,k;
int m1,m2,m3,m4,m5,m6,m7,m8;
m1=m2=m3=m4=m5=m6=m7=m8=0;
String que[]=new String[20000];
try{
        String url="jdbc:derby://localhost:1527/question paper";
        String username="qa";
        String password="qa";
                Connection con= DriverManager.getConnection(url,username,password);
         stmt=con.createStatement();
        String sql = "SELECT * FROM DS ORDER BY MARK ";
        ResultSet rs = stmt.executeQuery(sql);
File fout = new File(filan.getText());
	FileOutputStream fos = new FileOutputStream(fout);
 
    try (BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(fos))) {
           bw.write("                      DS PAPER:    (30 Marks)");
           bw.newLine();
        while(rs.next()){
            //Retrieve by column name
            marks[i] = rs.getInt("MARK");
            
            que[i] = rs.getString("QUESTIONS");
            
            /*bw.write(j+". "+que[i]+" "+marks[i]);
            bw.newLine();
            bw.newLine();*/
            i++;
            
            j++;
            
            
        }
        for(int qwe=0;qwe<i;qwe++)
        {
            System.out.println(marks[qwe]+" ");
            System.out.print(que[qwe]);
            if(marks[qwe]==1)
               m1++;
            else if(marks[qwe]==2)
               m2++;
            else if(marks[qwe]==3)
               m3++;
            else if(marks[qwe]==4)
               m4++;
            else if(marks[qwe]==5)
               m5++;
            else if(marks[qwe]==6)
               m6++;
            else if(marks[qwe]==7)
               m7++;
            else if(marks[qwe]==8)
               m8++;
            else continue;
        }
        System.out.println("i:"+i);
        System.out.println(m1);
        System.out.println(m2);
        System.out.println(m3);
        System.out.println(m4);
        System.out.println(m5);
        System.out.println(m6);
        System.out.println(m7);
        System.out.println(m8);
        System.out.println();
         int dif[]=new int[8];
         dif[0]=m1;
         dif[1]=dif[0]+m2;
        dif[2]=dif[1]+m3;
        dif[3]=dif[2]+m4;
        dif[4]=dif[3]+m5;
        dif[5]=dif[4]+m6;
        dif[6]=dif[5]+m7;
        dif[7]=dif[6]+m8;
        for(int mn=0;mn<8;mn++)
        {
            System.out.println(dif[mn]);
        }
         for (int p=0; p<m1; p++) {
            list1.add(new Integer(p));
        }
        Collections.shuffle(list1);
        for (int p=0; p<a0; p++) {
            bw.write((p+1)+". "+que[list1.get(p)]+" ("+marks[list1.get(p)]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list1.get(p));
        }
        for (int p=0; p<m2; p++) {
            list2.add(new Integer(p));
        }
        Collections.shuffle(list2);
       for (int p=0; p<a1; p++) {
            bw.write((a0+p+1)+". "+que[list2.get(p)+dif[0]]+" ("+marks[list2.get(p)+dif[0]]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list2.get(p));
        }
       for (int p=0; p<m3; p++) {
            list3.add(new Integer(p));
        }
       Collections.shuffle(list3);
       for (int p=0; p<a2; p++) {
            bw.write((a0+a1+p+1)+". "+que[list3.get(p)+dif[1]]+" ("+marks[list3.get(p)+dif[1]]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list3.get(p));
        }
       for (int p=0; p<m4; p++) {
            list4.add(new Integer(p));
        }
       Collections.shuffle(list4);
       for (int p=0; p<a3; p++) {
            bw.write((a0+a1+a2+p+1)+". "+que[list4.get(p)+dif[2]]+" ("+marks[list4.get(p)+dif[2]]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list4.get(p));
        }
       for (int p=0; p<m5; p++) {
            list5.add(new Integer(p));
        }
       Collections.shuffle(list5);
       for (int p=0; p<a4; p++) {
            bw.write((a0+a1+a2+a3+p+1)+". "+que[list5.get(p)+dif[3]]+" ("+marks[list5.get(p)+dif[3]]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list5.get(p));
        }for (int p=0; p<m6; p++) {
            list6.add(new Integer(p));
        }
       Collections.shuffle(list6);
       for (int p=0; p<a5; p++) {
            bw.write((a0+a1+a2+a3+a4+p+1)+". "+que[list6.get(p)+dif[4]]+" ("+marks[list6.get(p)+dif[4]]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list6.get(p));
        }
       for (int p=0; p<m7; p++) {
            list7.add(new Integer(p));
        }
       Collections.shuffle(list7);
        for (int p=0; p<a6; p++) {
            bw.write((a0+a1+a2+a3+a4+a5+p+1)+". "+que[list7.get(p)+dif[5]]+" ("+marks[list7.get(p)+dif[5]]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list7.get(p));
        }
        for (int p=0; p<m8; p++) {
            list8.add(new Integer(p));
        }
        Collections.shuffle(list8);
        for (int p=0; p<a7; p++) {
            bw.write((a0+a1+a2+a3+a4+a5+a6+p+1)+". "+que[list8.get(p)+dif[6]]+" ("+marks[list8.get(p)+dif[6]]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list8.get(p));
        }
    }


        }
       catch(SQLException ex)
       {
           JOptionPane.showMessageDialog(null,ex.toString());
       }    catch (FileNotFoundException ex) {
                Logger.getLogger(MarksChoice.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MarksChoice.class.getName()).log(Level.SEVERE, null, ex);
            }
    JOptionPane.showMessageDialog(null,"DS Paper created");}
else if(total==30 && ex.getSelectedItem().equals("CS"))
{
    Statement stmt=null;
int marks[]=new int[20000];
int i=0,j=1,l=1,m=1,n=1,k;
String que[]=new String[20000];
try{
        String url="jdbc:derby://localhost:1527/question paper";
        String username="qa";
        String password="qa";
                Connection con= DriverManager.getConnection(url,username,password);
         stmt=con.createStatement();
        String sql = "SELECT * FROM EXAM ORDER BY MARK ";
        ResultSet rs = stmt.executeQuery(sql);
File fout = new File(filan.getText());
	FileOutputStream fos = new FileOutputStream(fout);
 
    try (BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(fos))) {
           bw.write("                      CS PAPER:    (30 Marks)");
           bw.newLine();
        while(rs.next()){
            //Retrieve by column name
            marks[i] = rs.getInt("MARK");
            
            que[i] = rs.getString("QUESTIONS");
            
            /*bw.write(j+". "+que[i]+" "+marks[i]);
            bw.newLine();
            bw.newLine();*/
            i++;
            j++;
            
            
        }

        for (int p=0; p<6; p++) {
            list.add(new Integer(p));
        }
        Collections.shuffle(list);
        for (int p=0; p<a0; p++) {
            bw.write((p+1)+". "+que[list.get(p)]+" ("+marks[list.get(p)]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
       for (int p=0; p<a1; p++) {
            bw.write((a0+p+1)+". "+que[list.get(p)+6]+" ("+marks[list.get(p)+6]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
       for (int p=0; p<a2; p++) {
            bw.write((a0+a1+p+1)+". "+que[list.get(p)+12]+" ("+marks[list.get(p)+12]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
       for (int p=0; p<a3; p++) {
            bw.write((a0+a1+a2+p+1)+". "+que[list.get(p)+18]+" ("+marks[list.get(p)+18]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
       for (int p=0; p<a4; p++) {
            bw.write((a0+a1+a2+a3+p+1)+". "+que[list.get(p)+24]+" ("+marks[list.get(p)+24]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
       for (int p=0; p<a5; p++) {
            bw.write((a0+a1+a2+a3+a4+p+1)+". "+que[list.get(p)+30]+" ("+marks[list.get(p)+30]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
        for (int p=0; p<a6; p++) {
            bw.write((a0+a1+a2+a3+a4+a5+p+1)+". "+que[list.get(p)+36]+" ("+marks[list.get(p)+36]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
        for (int p=0; p<a7; p++) {
            bw.write((a0+a1+a2+a3+a4+a5+a6+p+1)+". "+que[list.get(p)+42]+" ("+marks[list.get(p)+42]+")");
            bw.newLine();
            bw.newLine();
            System.out.println(list.get(p));
        }
    }


        }
       catch(SQLException ex)
       {
           JOptionPane.showMessageDialog(null,ex.toString());
       }    catch (FileNotFoundException ex) {
                Logger.getLogger(MarksChoice.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MarksChoice.class.getName()).log(Level.SEVERE, null, ex);
            }
    JOptionPane.showMessageDialog(null,"CS Paper created");
}


else {
    JOptionPane.showMessageDialog(null,"Not a 30 mark paper");
}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
     ExamType framee8214=new ExamType();
   MarksChoice.this.setVisible(false);
   framee8214.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       try {
            String path = "E:\\HERITAGE PRESENTATION\\google";
            Runtime runtime = Runtime.getRuntime();
            runtime.exec("explorer.exe "+path);
            System.out.println("open");
        } catch (Exception E) {
     }        // TODO add your handling code here:
     // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarksChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarksChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarksChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarksChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MarksChoice().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MarksChoice.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox c0;
    private javax.swing.JComboBox c1;
    private javax.swing.JComboBox c2;
    private javax.swing.JComboBox c3;
    private javax.swing.JComboBox c4;
    private javax.swing.JComboBox c5;
    private javax.swing.JComboBox c6;
    private javax.swing.JComboBox c7;
    private javax.swing.JComboBox ex;
    private javax.swing.JTextField filan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField tot;
    // End of variables declaration//GEN-END:variables
}
